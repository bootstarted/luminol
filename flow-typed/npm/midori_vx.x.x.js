// flow-typed signature: 5a7317d4322478d99740d7dbaf76389f
// flow-typed version: <<STUB>>/midori_v1.0.0/flow_v0.66.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'midori'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */



declare module 'midori' {

  import type {Server} from 'http';

  declare export class App {}

  declare type ProxyOptions = {
    target?: string | {host: string, port: number},
    forward?: string,
    agent?: *,
    ssl?: *,
    ws?: boolean,
    xfwd?: boolean,
    secure?: boolean,
    toProxy?: boolean,
    prependPath?: boolean,
    ignorePath?: boolean,
    localAddress?: string,
    changeOrigin?: boolean,
    preserveHeaderKeyCase?: boolean,
    auth?: string,
    hostRewrite?: boolean,
    autoRewrite?: boolean,
    protocolRewrite?: boolean,
    cookieDomainRewrite?: false | string | {[string]: string},
    headers?: {[string]: string},
    proxyTimeout?: number,
}

  declare export function proxy(ProxyOptions): App;
  declare export function compose(...rest: Array<App>): App;
  declare export function use(string, ...rest: Array<App>): App;
  declare export function request(
    fn: (req: *, res: *) => App | Promise<App>
  ): App;
  declare type AppCallback = ((App) => void) => void;
  declare export function pending(fn: AppCallback, options?: {
    timeout: number,
    onTimeout: App,
  }): App;
  declare export function send(string | Buffer): App;
  declare export function status(number): App;
  declare export function header(string, string): App;
  declare export var next: App;
  declare export var halt: App;
  declare export function connect(App, Server): Server;
  declare export function listen(App, ...rest: Array<*>): Server;
}
